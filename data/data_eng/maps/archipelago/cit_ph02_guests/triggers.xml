<?xml version="1.0" encoding="windows-1251" standalone="yes" ?>
<triggers>
	<trigger Name="GlobalVar" active="1">
		<event timeout="0" eventid="GE_TIME_PERIOD" />
		<script>
			g_ObjCont:SetGameTime( gMissionTime[1], gMissionTime[2], gMissionTime[3], gMissionTime[4], gMissionTime[5] )
			
			SetWeather(0)

			RuleConsole("cinematic_spring_coeff 0.3")

			ShowMap()

			Radar:SetScanRadius(1000)

			GetPlayerVehicle():setImmortalMode(1)
			GetPlayerVehicle():SetNameFromScript("MyCar")
			SetCameraBehindPlayerVehicle()
			TActivate("PlayerDead")

			local friendly = {}
			local enemy = {}
			--                {objName                  Type               Prototype      EffHP VehHP FP Maneuv.      FriendlyName}
			friendly[1] = {"CITOldCruiser01_vehicle_0", "CITOldCruiserAegean", "CITPH02_OCruiserCIT01", 2000, 2000, 10967, 20, "“Elbereth” (“Egale”-class)"}
			friendly[2] = {"CITDestroyer01_vehicle_0", "CITDestroyerAegean", "CITPH02_DestroyerCIT01", 1200, 1200, 9680, 30, "“Gevaudan” (“Lyon”-class)"}
			friendly[3] = {"CITDestroyer01_vehicle_1", "CITDestroyerAegean", "CITPH02_DestroyerCIT02", 1200, 1200, 6868, 26, "“Rouen” (“Lyon”-class)"}
			friendly[4] = {"CITHelicopter01_vehicle_0", "CITHelicopterLeaderAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "call sign “Falcon” (“Condor” helicopters flight)"}
			friendly[5] = {"CITHelicopter01_vehicle_1", "CITHelicopterAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "none"}
			friendly[6] = {"CITHelicopter02_vehicle_0", "CITHelicopterLeaderAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "call sign “Thunder” (“Condor” helicopters flight)"}
			friendly[7] = {"CITHelicopter02_vehicle_1", "CITHelicopterAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "none"}
			friendly[8] = {"CITHelicopter03_vehicle_0", "CITHelicopterLeaderAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "call sign “Owl” (“Condor” helicopters flight)"}
			friendly[9] = {"CITHelicopter03_vehicle_1", "CITHelicopterAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "none"}
			friendly[10] = {"CITHelicopter04_vehicle_0", "CITHelicopterLeaderAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "call sign “Scythian” (“Condor” helicopters flight)"}
			friendly[11] = {"CITHelicopter04_vehicle_1", "CITHelicopterAegean", "CITPH02_HeliCIT02", 20, 500, 2864, 110, "none"}
			--                {objName      EffHP VehHP FP Maneuv.}
			enemy[1] = {"CDDestroyer01_vehicle_0", 1600, 1600, 6601, 22}
			enemy[2] = {"CDDestroyer01_vehicle_1", 1600, 1600, 6601, 22}
			enemy[3] = {"CDHeavyCruiser01_vehicle_0", 4000, 4000, 18551, 12}
			enemy[4] = {"CDBattleship01_vehicle_0", 6000, 6000, 20737, 7}
			enemy[5] = {"CDBattleship01_vehicle_1", 6000, 6000, 40565, 7}
			enemy[6] = {"CDHelicopter01_vehicle_0", 13, 250, 627, 140}
			enemy[7] = {"CDHelicopter01_vehicle_1", 13, 250, 627, 140}
			enemy[8] = {"CDHelicopter01_vehicle_2", 13, 250, 627, 140}
			enemy[9] = {"CDHelicopter01_vehicle_3", 13, 250, 627, 140}
			enemy[10] = {"CDHelicopter02_vehicle_0", 13, 250, 627, 140}
			enemy[11] = {"CDHelicopter02_vehicle_1", 13, 250, 627, 140}
			enemy[12] = {"CDHelicopter02_vehicle_2", 13, 250, 627, 140}
			enemy[13] = {"CDHelicopter02_vehicle_3", 13, 250, 627, 140}

			SetVar("MissionTime", 0)
			SetVar("RequiredMissionTime", 576) -- mission completion time (in s) for getting bonus score
			SetVar("BaseRetreatScore", 40) -- base retreat score that may get multiplied depending on 4 different factors
			SetVar("RequiredRetreatScore", 46) -- retreat score that needs to be reached for each friendly unit to successfully retreat
			SetVar("PlayerHealth", 1200)
			SetVar("PlayerVehicleHealth", 1200)
			SetVar("PlayerEndHealth", GetVar("PlayerHealth").AsInt)
			SetVar("PlayerName", "“Provence” (“Lyon”-class)")
			SetVar("Objectives", 2) -- amount of main objectives, excluding destruction of all enemy units and completing the mission without losses
			SetVar("ObjectiveScoreReward", 35000) -- how much score each objective gives
			SetVar("MissionScoreRewardMultiplier", 0.115) -- multiplier that determines how much money the player will receive for each score point

			local j = 1
			local friendlies = {}
			while friendly[j] do
				friendlies[j] = friendly[j][1]
				j = j + 1
			end
			friendlies = TableToString(friendlies)
			j = 1
			local friendliesTypes = {}
			while friendly[j] do
				friendliesTypes[j] = friendly[j][2]
				j = j + 1
			end
			friendliesTypes = TableToString(friendliesTypes)
			j = 1
			local friendliesPrototypes = {}
			while friendly[j] do
				friendliesPrototypes[j] = friendly[j][3]
				j = j + 1
			end
			friendliesPrototypes = TableToString(friendliesPrototypes)
			j = 1
			local friendliesHealth = {}
			while friendly[j] do
				friendliesHealth[j] = friendly[j][4]
				j = j + 1
			end
			friendliesHealth = TableToString(friendliesHealth)
			j = 1
			local friendliesVehicleHealth = {}
			while friendly[j] do
				friendliesVehicleHealth[j] = friendly[j][5]
				j = j + 1
			end
			friendliesVehicleHealth = TableToString(friendliesVehicleHealth)
			j = 1
			local friendliesFirepower = {}
			while friendly[j] do
				friendliesFirepower[j] = friendly[j][6]
				j = j + 1
			end
			friendliesFirepower = TableToString(friendliesFirepower)
			j = 1
			local friendliesManeuverability = {}
			while friendly[j] do
				friendliesManeuverability[j] = friendly[j][7]
				j = j + 1
			end
			friendliesManeuverability = TableToString(friendliesManeuverability)
			j = 1
			local friendliesNames = {}
			while friendly[j] do
				friendliesNames[j] = friendly[j][8]
				j = j + 1
			end
			friendliesNames = TableToString(friendliesNames)

			j = 1
			local enemies = {}
			while enemy[j] do
				enemies[j] = enemy[j][1]
				j = j + 1
			end
			enemies = TableToString(enemies)
			j = 1
			local enemiesHealth = {}
			while enemy[j] do
				enemiesHealth[j] = enemy[j][2]
				j = j + 1
			end
			enemiesHealth = TableToString(enemiesHealth)
			j = 1
			local enemiesVehicleHealth = {}
			while enemy[j] do
				enemiesVehicleHealth[j] = enemy[j][3]
				j = j + 1
			end
			enemiesVehicleHealth = TableToString(enemiesVehicleHealth)
			j = 1
			local enemiesFirepower = {}
			while enemy[j] do
				enemiesFirepower[j] = enemy[j][4]
				j = j + 1
			end
			enemiesFirepower = TableToString(enemiesFirepower)
			j = 1
			local enemiesManeuverability = {}
			while enemy[j] do
				enemiesManeuverability[j] = enemy[j][5]
				j = j + 1
			end
			enemiesManeuverability = TableToString(enemiesManeuverability)
			SetVar("TotalMissionScore", 0) -- total score gained, gets updated after mission stats calculation with the info about destroyed enemy units; score for enemy units is decided by their firepower
			SetVar("ObjectivesCompleted", 0)
			SetVar("Friendlies", friendlies)
			SetVar("FriendliesTypes", friendliesTypes)
			SetVar("FriendliesPrototypes", friendliesPrototypes)
			SetVar("FriendliesHealth", friendliesHealth) -- friendlies effective hp
			SetVar("FriendliesVehicleHealth", friendliesVehicleHealth) -- friendlies real hp according to the vehicle stats, used in UpdateUnitsStats
			SetVar("FriendliesEndHealth", friendliesHealth) -- friendlies hp at the end of the mission, are updated by UpdateUnitsStats
			SetVar("FriendliesFirepower", friendliesFirepower)
			SetVar("FriendliesManeuverability", friendliesManeuverability)
			SetVar("FriendliesNames", friendliesNames)
			SetVar("Enemies", enemies)
			SetVar("EnemiesHealth", enemiesHealth) -- enemies effective hp
			SetVar("EnemiesVehicleHealth", enemiesVehicleHealth) -- enemies real hp according to the vehicle stats, used in UpdateUnitsStats
			SetVar("EnemiesEndHealth", enemiesHealth) -- enemies hp at the end of the mission, are updated by UpdateUnitsStats
			SetVar("EnemiesFirepower", enemiesFirepower)
			SetVar("EnemiesManeuverability", enemiesManeuverability)
			

			if not getObj("ThePendulum") then
				CreateVehicleEx("PendulumVehicle01", "ThePendulum", CVector(30, 255, 80), 1486)
				local Maschine = getObj("ThePendulum")
				if Maschine then
					Maschine:setGodMode(1)
					Maschine:setImmortalMode(1)
					Maschine:SetExternalPathByName("PendulumPath")
					
					TActivate("trPendulum")
				end
			end

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="trPendulum" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_GAME_START" ObjName="Player1" />
		<script>
			local Maschine = GetEntityByName("ThePendulum")
			if Maschine then
				Maschine:SetLinearVelocity(CVector(0, 0, 0))
				Maschine:SetExternalPathByName("PendulumPath")
				local PendulumStat = GetVar("PendulumStatus").AsInt
				local MissionTime = GetVar("MissionTime").AsInt
				if 50>PendulumStat then
					PendulumStat = PendulumStat + 1
					SetVar("PendulumStatus", PendulumStat)
					println("pendstat set to "..PendulumStat)
					MissionTime = MissionTime + 8
					SetVar("MissionTime", MissionTime)
				else
					SetVar("PendulumStatus", 0)
					println("corovan management activated, pendstat set to 0")
					MissionTime = MissionTime + 8
					SetVar("MissionTime", MissionTime)
				end
			end

		</script>
	</trigger>

	<trigger Name="trMusicManager" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<script>
			PlayMusic(GetVar("CustomMusicName").AsString)

		</script>
	</trigger>

	<trigger Name="MissionMusicStart" active="1">
		<event timeout="0.5" eventid="GE_TIME_PERIOD" />
		<script>
			PlayMusic("bs_force_quiet")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="RetreatStart" active="0">
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="MissionStartLoc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Retreat01Loc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Retreat02Loc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Retreat03Loc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Retreat04Loc" />
		<script>
			TActivate("Retreat")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="Retreat" active="0">
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="MissionStartLoc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Retreat01Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Retreat02Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Retreat03Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Retreat04Loc" />
		<script>
			UpdateUnitsStats()

			local b = SpawnMessageBox( "1000" )
			if b == 1 then
				trigger:Deactivate()

				if not(IsQuestTaken("CIT_PH02_Retreat")) then
					FailQuest("CIT_PH02")
				else
					CompleteQuest("CIT_PH02_Retreat")
				end

				FailQuestIfTaken("CIT_PH02_DestroyDestroyers")

				UpdateUnitsStats()

				CalcMissionStats()

				PassToMap("hq", "Headquarters_enter", 90, false )
			else
				trigger:Deactivate()

				TActivate("RetreatStart")
			end
			
		</script>
	</trigger>

	<trigger Name="Leave" active="0">
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave01Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave02Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave03Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave04Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave05Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Leave06Loc" />
		<script>
			if not(IsQuestTaken("CIT_PH02_Retreat")) then
				FailQuest("CIT_PH02")
			else
				CompleteQuest("CIT_PH02_Retreat")
			end

			FailQuestIfTaken("CIT_PH02_DestroyDestroyers")

			UpdateUnitsStats()

			CalcMissionStats()

			PassToMap("hq", "Headquarters_enter", 90, false)
			
			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="WarningStart" active="0">
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Warning01Loc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Warning02Loc" />
		<event eventid="GE_OBJECT_LEAVES_LOCATION" ObjName="Warning03Loc" />
		<script>
			TActivate("Warning")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="Warning" active="1">
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Warning01Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Warning02Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Warning03Loc" />
		<script>
			local b = SpawnMessageBox( "1002" )

			TActivate("WarningStart")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="Desertion" active="1">
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Desertion01Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Desertion02Loc" />
		<event eventid="GE_OBJECT_ENTERS_LOCATION" ObjName="Desertion03Loc" />
		<script>
			if not(IsQuestTaken("CIT_PH02_Retreat")) then
				FailQuest("CIT_PH02")
			else
				FailQuest("CIT_PH02_Retreat")
				FailQuest("CIT_PH02")
			end

			FailQuestIfTaken("CIT_PH02_DestroyDestroyers")

			UpdateUnitsStats(1) -- the trigger is identical to Leave, besides this (1)

			CalcMissionStats(1) -- the trigger is identical to Leave, besides this (1)

			PassToMap("hq", "Headquarters_enter", 90, false)
			
			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="MissionStart" active="1">
		<event timeout="0" eventid="GE_TIME_PERIOD" />
		<script>
			local Units
			local Unit
			-- ================
			--  Main CIT Force
			-- ================
			TeamCreate("CITOldCruiser01", 1004, CVector(1061, 285, 5954), {"CITPH02_OCruiserCIT01"})
			TeamCreate("CITDestroyer01", 1003, CVector(1183, 285, 5904), {"CITPH02_DestroyerCIT01", "CITPH02_DestroyerCIT02"})

			TeamCreate("CITHelicopter01", 1006, CVector(6322, 285, 4783), {"CITPH02_HeliCIT0"..math.random(4),"CITPH02_HeliCIT0"..math.random(4)})
			TeamCreate("CITHelicopter02", 1006, CVector(6416, 285, 4677), {"CITPH02_HeliCIT0"..math.random(4),"CITPH02_HeliCIT0"..math.random(4)})
			TeamCreate("CITHelicopter03", 1006, CVector(6532, 285, 4832), {"CITPH02_HeliCIT0"..math.random(4),"CITPH02_HeliCIT0"..math.random(4)})
			TeamCreate("CITHelicopter04", 1006, CVector(6571, 285, 4718), {"CITPH02_HeliCIT0"..math.random(4),"CITPH02_HeliCIT0"..math.random(4)})

			-- ----------------
			-- Units parameters

			Units = getObj("CITOldCruiser01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "StandardTactic")
				Units:_AdjustBehaviour ()
			end

			Units = getObj("CITDestroyer01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "BoxTactic")
				Units:_AdjustBehaviour ()
			end

			-- ---------------
			-- Unit parameters

			Unit = getObj("CITOldCruiser01_vehicle_0")
			if Unit then
				Unit:SetRotation(Quaternion(0.0000, 0.9239, 0.0000, 0.3827))
				Unit:SetCruisingSpeed(8)
				Unit:SetExternalPathByName("StartPath_CITOldCruiser01_vehicle_0")
			end

			Unit = getObj("CITDestroyer01_vehicle_0")
			if Unit then
				Unit:SetRotation(Quaternion(0.0000, 0.9239, 0.0000, 0.3827))
				Unit:SetCruisingSpeed(8)
				Unit:SetExternalPathByName("StartPath_CITDestroyer01_vehicle_0")
			end

			Unit = getObj("CITDestroyer01_vehicle_1")
			if Unit then
				Unit:SetGamePositionOnGround(CVector(987, 285, 6076))
				Unit:SetRotation(Quaternion(0.0000, 0.9239, 0.0000, 0.3827))
				Unit:SetCruisingSpeed(8)
				Unit:SetExternalPathByName("StartPath_CITDestroyer01_vehicle_1")
			end

			coords = {{CVector(6322, 285, 4783), CVector(6321, 285, 4833)},
					  {CVector(6416, 285, 4677), CVector(6443, 285, 4720)},
					  {CVector(6532, 285, 4832), CVector(6552, 285, 4881)},
					  {CVector(6571, 285, 4718), CVector(6603, 285, 4776)}}
			for i=1, 4 do
				for j=0, 1 do
					Unit = getObj("CITHelicopter0"..i.."_vehicle_"..j)
					if Unit then
						Unit:SetGamePositionOnGround(coords[i][j+1])
						Unit:SetRotation(Quaternion(0.0000, -0.7660, 0.0000, 0.6428))
					end
				end
			end

			-- ===============
			--  Main CD Force
			-- ===============
			TeamCreate("CDDestroyer01", 1053, CVector(3487, 285, 2450), {"CITPH02_DestroyerCD01", "CITPH02_DestroyerCD01"})
			TeamCreate("CDHeavyCruiser01", 1054, CVector(3612, 285, 2377), {"CITPH02_HCruiserCD01"})
			TeamCreate("CDBattleship01", 1055, CVector(3563, 285, 2207), {"CITPH02_BattleshipCD01", "CITPH02_BattleshipCD02"})

			-- =============
			--  CD Reserves
			-- =============
			TeamCreate("CDHelicopter01", 1056, CVector(4152, 285, 157), {"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4)})
			TeamCreate("CDHelicopter02", 1056, CVector(4314, 285, 63), {"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4),"CITPH02_HeliCD0"..math.random(4)})

			-- ----------------
			-- Units parameters

			Units = getObj("CDDestroyer01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "BoxTactic")
				Units:_AdjustBehaviour ()
			end

			Units = getObj("CDHeavyCruiser01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "StandardTactic")
				Units:_AdjustBehaviour ()
			end
	
			Units = getObj("CDBattleship01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "SniperTactic")
				Units:_AdjustBehaviour ()
			end

			Units = getObj("CDHelicopter01")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "StandardTactic")
				Units:_AdjustBehaviour ()
			end

			Units = getObj("CDHelicopter02")
			if Units then
				Units:SetProperty ("TeamTacticPrototype", "BoxTactic")
				Units:_AdjustBehaviour ()
			end

			-- ---------------
			-- Unit parameters
			
			Unit = getObj("CDDestroyer01_vehicle_0")
			if Unit then
				Unit:SetRotation(Quaternion(0.0000, -0.2483, 0.0000, 0.9687))
			end

			Unit = getObj("CDDestroyer01_vehicle_1")
			if Unit then
				Unit:SetGamePositionOnGround(CVector(3618, 285, 2522))
				Unit:SetRotation(Quaternion(0.0000, -0.2483, 0.0000, 0.9687))
			end

			Unit = getObj("CDHeavyCruiser01_vehicle_0")
			if Unit then
				Unit:SetRotation(Quaternion(0.0000, -0.2483, 0.0000, 0.9687))
			end

			Unit = getObj("CDBattleship01_vehicle_0")
			if Unit then
				Unit:SetRotation(Quaternion(0.0000, -0.2483, 0.0000, 0.9687))
			end

			Unit = getObj("CDBattleship01_vehicle_1")
			if Unit then
				Unit:SetGamePositionOnGround(CVector(3782, 285, 2327))
				Unit:SetRotation(Quaternion(0.0000, -0.2483, 0.0000, 0.9687))
			end

			coords = {{CVector(4152, 285, 157), CVector(4189, 285, 160), CVector(4236, 285, 150), CVector(4264, 285, 170)},
					  {CVector(4314, 285, 63), CVector(4352, 285, 66), CVector(4399, 285, 56), CVector(4426, 285, 76)}}
			for i=1, 2 do
				for j=0, 3 do
					Unit = getObj("CDHelicopter0"..i.."_vehicle_"..j)
					if Unit then
						Unit:SetGamePositionOnGround(coords[i][j+1])
						Unit:SetRotation(Quaternion(0.0000, -0.1305, 0.0000, 0.9914))
					end
				end
			end

			-- =========
			--  Trigger
			-- =========

			local PlfID = GetPlayerVehicleId()
			FlyLinked( "CITPH02_Start1", PlfID, 30, 0, 1, PlfID )
			StartCinematic()

			AddCinematicMessage( 1, 2)
			AddCinematicMessage( 2, 1)
			AddCinematicMessage( 3, 1)

			local Plf = GetPlayerVehicle()
			if Plf then
				Plf:SetRotation(Quaternion(0.0000, 0.9239, 0.0000, 0.3827))
				Plf:SetExternalPathByName("StartPath_Player")
				Plf:LimitMaxSpeed(9)
			end

			TActivate("MissionStart_End")
			
			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="MissionStart_End" active="0">
		<event eventid="GE_END_CINEMATIC" ObjName="Player1" />
		<event eventid="GE_SKIP_CINEMATIC" ObjName="Player1" />
		<script>
			local Unit
			local Plf = GetPlayerVehicle()

			if Plf then
				Plf:PlaceToEndOfPath("StartPath_Player")
				Plf:UnlimitMaxSpeed()
				Plf:AddModifier("fuel", "+ 6271337")
				Plf:AddModifier("fuel", "- 48")
			end

			Unit = getObj("CITOldCruiser01_vehicle_0")
			if Unit then
				Unit:PlaceToEndOfPath("StartPath_CITOldCruiser01_vehicle_0")
				Unit:SetExternalPathByName("CITOldCruiser01_vehicle_0_Waypoint1")
				Unit:SetCruisingSpeed(10)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CITOldCruiser01_vehicle_0_WaypointStatus", TableToString({0, 2, 0}))
			end

			Unit = getObj("CITDestroyer01_vehicle_0")
			if Unit then
				Unit:PlaceToEndOfPath("StartPath_CITDestroyer01_vehicle_0")
				Unit:SetExternalPathByName("CITDestroyer01_vehicle_0_Waypoint1")
				Unit:SetCruisingSpeed(10)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CITDestroyer01_vehicle_0_WaypointStatus", TableToString({0, 2, 0}))
			end

			Unit = getObj("CITDestroyer01_vehicle_1")
			if Unit then
				Unit:PlaceToEndOfPath("StartPath_CITDestroyer01_vehicle_1")
				Unit:SetExternalPathByName("CITDestroyer01_vehicle_1_Waypoint1")
				Unit:SetCruisingSpeed(10)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CITDestroyer01_vehicle_1_WaypointStatus", TableToString({0, 2, 0}))
			end	

			Unit = getObj("CDDestroyer01_vehicle_0")
			if Unit then
				Unit:SetExternalPathByName("CDDestroyer01_vehicle_0_Waypoint1")
				Unit:SetCruisingSpeed(3)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CDDestroyer01_vehicle_0_WaypointStatus", TableToString({0, 3, 0})) -- waypoints reached, amount of waypoints, amount of cycles with 0 speed
			end

			Unit = getObj("CDDestroyer01_vehicle_1")
			if Unit then
				Unit:SetExternalPathByName("CDDestroyer01_vehicle_1_Waypoint1")
				Unit:SetCruisingSpeed(3)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CDDestroyer01_vehicle_1_WaypointStatus", TableToString({0, 3, 0}))
			end

			Unit = getObj("CDHeavyCruiser01_vehicle_0")
			if Unit then
				Unit:SetExternalPathByName("CDHeavyCruiser01_vehicle_0_Waypoint1")
				Unit:SetCruisingSpeed(3)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CDHeavyCruiser01_vehicle_0_WaypointStatus", TableToString({0, 3, 0}))
			end

			Unit = getObj("CDBattleship01_vehicle_0")
			if Unit then
				Unit:SetExternalPathByName("CDBattleship01_vehicle_0_Waypoint1")
				Unit:SetCruisingSpeed(3)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CDBattleship01_vehicle_0_WaypointStatus", TableToString({0, 3, 0}))
			end

			Unit = getObj("CDBattleship01_vehicle_1")
			if Unit then
				Unit:SetExternalPathByName("CDBattleship01_vehicle_1_Waypoint1")
				Unit:SetCruisingSpeed(3)
				Unit:SetCanBeDistractedFromMoving(true)

				SetVar("CDBattleship01_vehicle_1_WaypointStatus", TableToString({0, 3, 0}))
			end

			TActivate("CDDestroyed")
			TActivate("CDFormationManager")
			TActivate("CDCriticalLosses")
			TActivate("CDOrder")
			TActivate("CITFormationManager")
			TActivate("CITCriticalLosses")
			TActivate("CITOrder")

			TActivate("RetreatStart")
			TActivate("Leave")

			TakeQuest("CIT_PH02")

			SetVar("MissionTime", 0)

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="CDDestroyed" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDDestroyer01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDDestroyer01_vehicle_1" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDHeavyCruiser01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDBattleship01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDBattleship01_vehicle_1" />
		<script>
			local coords
			local Units = 0
			local enemiesPos = CVector(0, 285, 0)
			local pos = CVector(0, 285, 0)
			local Friendlies = StringToTable(GetVar("Friendlies").AsString)
			local Enemies = StringToTable(GetVar("Enemies").AsString)
			local TargetEnemies = {Enemies[1],Enemies[2]}
			local AllEnemies = {Enemies[1],Enemies[2],Enemies[3],Enemies[4],Enemies[5]}

			if not(IsQuestComplete("CIT_PH02_DestroyDestroyers")) then
				if CheckUnits(TargetEnemies, "dead", 2) then
					AddFadingMsgId("fm_aircraft_enroute_ally")

					CompleteQuest("CIT_PH02_DestroyDestroyers")

					for i=1, 5 do
						if CheckUnits(AllEnemies[i]) then
							pos = getObj(AllEnemies[i]):GetPosition()
							enemiesPos.x = enemiesPos.x + pos.x
							enemiesPos.z = enemiesPos.z + pos.z
							Units = Units + 1
						end
					end

					enemiesPos.x = enemiesPos.x / Units
					enemiesPos.z = enemiesPos.z / Units

					println("enemies position for CIT helis is "..enemiesPos.x..", 285, "..enemiesPos.z)
					LOG("enemies position for CIT helis is "..enemiesPos.x..", 285, "..enemiesPos.z)
					local pPos = GetPlayerVehicle():GetPosition()
					pPos = ((pPos.x - 4822)^2 + (pPos.z - 4783)^2)^0.5
					LOG("distance between player and helis warp is "..pPos)
					if pPos >= 1300 then
						LOG("its more than 1300")
						coords = {{CVector(4822, 285, 4783), CVector(4821, 285, 4833)},
								{CVector(4916, 285, 4677), CVector(4943, 285, 4720)},
								{CVector(5032, 285, 4832), CVector(5052, 285, 4881)},
								{CVector(5071, 285, 4718), CVector(5103, 285, 4776)}}
						for i=1, 4 do
							for j=0, 1 do
								Units = getObj("CITHelicopter0"..i.."_vehicle_"..j)
								if Units then
									Units:SetGamePositionOnGround(coords[i][j+1])
								end
							end
						end
						LOG("done warping")
					end

					for i=1, 4 do 
						Units = getObj("CITHelicopter0"..i)
						if Units then
							Units:StackOpen()
							Units:SetDestination(enemiesPos)
							Units:SetDestination(CVector(3612, 285, 2377))
							Units:SetDestination(CVector(2106, 285, 7706))
							Units:StackClose()
						end
					end

--					for i=1, 4 do
--						for j=0, 1 do
--							Unit = getObj("CITHelicopter0"..i.."_vehicle_"..j)
--							if Unit then
--								Unit:SetCustomLinearVelocity( 100 )
--							end
--						end
--					end

					println("CIT helicopters are on the way")
					LOG("CIT helicopters are on the way")
				else
					UpdateQuestCoordinates("CIT_PH02_DestroyDestroyers", TargetEnemies)
				end
			end

			if CheckUnits(AllEnemies, "dead", 5) then
				UpdateUnitsStats()

				CompleteQuest("CIT_PH02_DestroyFleet")

				if not(IsQuestTaken("CIT_PH02_Retreat")) then
					AddImportantFadingMsgByStrIdFormatted("fm_cit_ph02_retreat")
				end

				if CheckUnits(Friendlies, "alive", 1) then
					TActivate("CITRetreat")

					AddFadingMsgId("fm_cit_ph02_citretreating")
				end

				TakeQuest("CIT_PH02_Retreat")

				PlayMusic("bs_force_quiet")

				if CheckDistBetweenUnits(GetPlayerVehicle(), Enemies, "least") >= 1150 then
					local b = SpawnMessageBox( "1001" )
					println("mission end 0")
					if b == 1 then
						trigger:Deactivate()

						CompleteQuestIfTaken("CIT_PH02_Retreat")

						println("mission end 1")

						UpdateUnitsStats()

						CalcMissionStats()

						println("mission end 3")

						PassToMap("hq", "Headquarters_enter", 90, false )
					end
				end

				trigger:Deactivate()
			else
				UpdateQuestCoordinates("CIT_PH02_DestroyFleet", AllEnemies)
			end

		</script>
	</trigger>

	<trigger Name="CDFormationManager" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_TARGET_REACHED" ObjName="CDDestroyer01_vehicle_0" />
		<event eventid="GE_TARGET_REACHED" ObjName="CDDestroyer01_vehicle_1" />
		<event eventid="GE_TARGET_REACHED" ObjName="CDHeavyCruiser01_vehicle_0" />
		<event eventid="GE_TARGET_REACHED" ObjName="CDBattleship01_vehicle_0" />
		<event eventid="GE_TARGET_REACHED" ObjName="CDBattleship01_vehicle_1" />
		<script>
			local Enemies = StringToTable(GetVar("Enemies").AsString)
			local TargetEnemies = {Enemies[1],Enemies[2],Enemies[3],Enemies[4],Enemies[5]}
			local Unit

			for i=1, 5 do
				Unit = getObj(TargetEnemies[i])
				if Unit then
					Unit:SetCruisingSpeed(3)
				end
			end

			-- ================ --
			-- Waypoint Manager --
			-- ================ --
			local vehicles = TargetEnemies
			local currentVehicleName -- "CDDestroyer01"
			local currentVehicle -- = getObj("CDDestroyer01_vehicle_0")
			local currentVehicleWaypointInfo -- = StringToTable(GetVar("CDD01aWaypointStatus").AsString)
			local speedThreshold = 3 -- the speed at which the vehicle is deemed suspiciously still
			local checksThreshold = 3 -- amount of checks for the vehicle to be deemed suspiciciously still
			local checksAmount = 0
			local currentWaypoint = 0
			local vehicleTargetsReached = 0 -- the amount of vehicles that reached the targets, if it equals to the amount of entries in the 'vehicles' table - the trigger deactivates
			local triggerObjName = trigger:GetCallObjName()
			for i=1, getn(vehicles) do
				currentVehicleName = vehicles[i]
				currentVehicle = getObj(currentVehicleName)
				if triggerObjName==currentVehicleName then
					println("trigger object is "..currentVehicleName)
					LOG("trigger object is "..currentVehicleName)
					currentVehicleWaypointInfo = StringToTable(GetVar(currentVehicleName.."_WaypointStatus").AsString)
					currentWaypoint = currentVehicleWaypointInfo[1] + 2
					LOG("currentwaypoint is "..currentWaypoint)
--					currentWaypoint = currentVehicleWaypointInfo[1] + 1
					if currentVehicleWaypointInfo[2] >= currentWaypoint then
						LOG("there are waypoints for "..currentVehicleName)
						currentVehicle:SetExternalPathByName(currentVehicleName.."_Waypoint"..currentWaypoint) -- the vehicle is set on the path for the next waypoint
						currentVehicle:SetCanBeDistractedFromMoving(true) -- set this to false or remove the line if this trigger is used for racing, lol
--						currentVehicleWaypointInfo[1] = currentWaypoint - 1
--						SetVar(currentVehicleName.."WaypointStatus", TableToString(currentVehicleWaypointInfo))
						println(currentVehicleName.." is set for a new waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
						LOG(currentVehicleName.." is set for a new waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
					else
						LOG("maximum waypoints for "..currentVehicleName.." reached")
						println("maximum waypoints for "..currentVehicleName.." reached")
					end

					currentWaypoint = currentWaypoint - 1
					currentVehicleWaypointInfo[1] = currentWaypoint
					currentVehicleWaypointInfo[3] = checksAmount
					SetVar(currentVehicleName.."_WaypointStatus", TableToString(currentVehicleWaypointInfo))
					println(currentVehicleName.." waypoint info updated")

					break
				elseif triggerObjName=="ThePendulum" then
					println("trigger object is the pendulum")
					LOG("trigger object is the pendulum")
					-- it's pendulum that triggered the activation
					-- check if the ships are moving
					-- if they haven't moved for 3 cycles = set them on the current waypoint
					for j=1, getn(vehicles) do
						currentVehicleName = vehicles[j]
						currentVehicle = getObj(currentVehicleName)
						if CheckUnits(currentVehicleName) then
							println(currentVehicleName.." exists")
							currentVehicleWaypointInfo = StringToTable(GetVar(currentVehicleName.."_WaypointStatus").AsString)
							currentWaypoint = currentVehicleWaypointInfo[1] + 1
							if speedThreshold > GetSpeed(currentVehicle) then
								println(currentVehicleName.." speed is too low")
								checksAmount = currentVehicleWaypointInfo[3] + 1 -- the speed of the vehicle is too low, the check has passed one more time
								println("checks amount is "..checksAmount)
								if checksAmount >= checksThreshold then
									println("there have been 3 checks for "..currentVehicleName)
--									currentWaypoint = currentVehicleWaypointInfo[1] + 1
									if currentVehicleWaypointInfo[2] >= currentWaypoint then
										currentVehicle:SetExternalPathByName(currentVehicleName.."_Waypoint"..currentWaypoint) -- the vehicle is set on the path for the current waypoint
										currentVehicle:SetCanBeDistractedFromMoving(true) -- set this to false or remove the line if this trigger is used for racing, lol
										println(currentVehicleName.." set for the current waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
										LOG(currentVehicleName.." set for the current waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
									else
										vehicleTargetsReached = vehicleTargetsReached + 1
										LOG("maximum waypoints for "..currentVehicleName.." reached")
										println("maximum waypoints for "..currentVehicleName.." reached")
									end
								end
							else
								println(currentVehicleName.." speed is fine")
								LOG(currentVehicleName.." speed is fine")
								checksAmount = 0 -- the speed of the vehicle is okay, the checks are dropped
							end

							currentWaypoint = currentWaypoint - 1
							currentVehicleWaypointInfo[1] = currentWaypoint
							currentVehicleWaypointInfo[3] = checksAmount
							SetVar(currentVehicleName.."_WaypointStatus", TableToString(currentVehicleWaypointInfo))
							LOG(currentVehicleName.." waypoint info updated - "..TableToString(currentVehicleWaypointInfo))
							println(currentVehicleName.." waypoint info updated - "..TableToString(currentVehicleWaypointInfo))
--							if currentVehicleWaypointInfo[1] > currentVehicleWaypointInfo[2] then
--								vehicleTargetsReached = vehicleTargetsReached + 1
--							end
						else
							vehicleTargetsReached = vehicleTargetsReached + 1
							LOG(currentVehicleName.." is dead")
							println(currentVehicleName.." is dead")
						end
					end

					break
				end
			end

			LOG("vehicleTargetReached is "..vehicleTargetsReached)
			if vehicleTargetsReached>=getn(vehicles) then
				println("all vehicles reached their targets")
				LOG("ALL CD REACHED THE TARGET")
				trigger:Deactivate()
			end

		</script>
	</trigger>

	<trigger Name="CDCriticalLosses" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDDestroyer01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDDestroyer01_vehicle_1" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDHeavyCruiser01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDBattleship01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CDBattleship01_vehicle_1" />
		<script>
			local Enemies = StringToTable(GetVar("Enemies").AsString)
			local EnemiesHealth = StringToTable(GetVar("EnemiesEndHealth").AsString)
			local TargetEnemies = {}
			local TotalHealth = 0
			for i=1, 5 do
				TargetEnemies[i] = Enemies[i]
				TotalHealth = TotalHealth + EnemiesHealth[i]
				LOG("TargetEnemies "..TableToString(TargetEnemies))
				LOG("Enemies Total Health "..TotalHealth)
			end

			local triggerObjName = trigger:GetCallObjName()
			if triggerObjName~="ThePendulum" then
				UpdateUnitsStats()
			end

			if CheckUnits(TargetEnemies, "dead", (getn(TargetEnemies) - 1)) or 5000 >= TotalHealth then
				AddFadingMsgId("fm_critical_loss_foe")

				TDeactivate("CDFormationManager")
				TActivate("CDRetreat")

				trigger:Deactivate()
			end
			
		</script>
	</trigger>

	<trigger Name="CDRetreat" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<script>
			local Unit
			local Enemies = StringToTable(GetVar("Enemies").AsString)

			TDeactivate("CDFormationManager")

			Unit = getObj("CDDestroyer01")
			if Unit then
				Unit:SetProperty ("TeamTacticPrototype", "CowardTeamTactic")
				Unit:_AdjustBehaviour ()
			end
			Unit = getObj("CDHeavyCruiser01")
			if Unit then
				Unit:SetProperty ("TeamTacticPrototype", "CowardTeamTactic")
				Unit:_AdjustBehaviour ()
			end
			Unit = getObj("CDBattleship01")
			if Unit then
				Unit:SetProperty ("TeamTacticPrototype", "CowardTeamTactic")
				Unit:_AdjustBehaviour ()
			end

			for i=1,5 do
				Unit = getObj(Enemies[i])
				if Unit then
					Unit:SetExternalPathByName("CDRetreatDirection_"..i)
					Unit:SetCruisingSpeed(40)
					if i>=4 then
						Unit:SetCanBeDistractedFromMoving(true)
					else
						Unit:SetCanBeDistractedFromMoving(false)
					end
				end
			end

			AddImportantFadingMsgByStrIdFormatted("fm_retreat_attempt_foe")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="CDOrder" active="0">
<!--		<event eventid="GE_UNDER_ATTACK" ObjName="CITDestroyer01_vehicle_0" />
		<event eventid="GE_UNDER_ATTACK" ObjName="CITDestroyer01_vehicle_1" />
		<event eventid="GE_UNDER_ATTACK" ObjName="CITOldCruiser01_vehicle_0" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CITDestroyer01_vehicle_0" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CITDestroyer01_vehicle_1" /> -->
		<event eventid="GE_NOTICE_ENEMY" ObjName="CITOldCruiser01_vehicle_0" />
		<script>
			local Units = 0
			local friendliesPos = CVector(0, 285, 0)
			local pos = CVector(0, 285, 0)
			local Friendlies = StringToTable(GetVar("Friendlies").AsString)
			local TargetFriendlies = {Friendlies[1],Friendlies[2],Friendlies[3]}

			for i=1, 3 do
				if CheckUnits(TargetFriendlies[i]) then
					pos = getObj(TargetFriendlies[i]):GetPosition()
					friendliesPos.x = friendliesPos.x + pos.x
					friendliesPos.z = friendliesPos.z + pos.z
					Units = Units + 1
				end
			end

			friendliesPos.x = friendliesPos.x / Units
			friendliesPos.z = friendliesPos.z / Units

			println("enemies position for CD helis is "..friendliesPos.x..", 285, "..friendliesPos.z)
			LOG("enemies position for CD helis is "..friendliesPos.x..", 285, "..friendliesPos.z)

			for i=1, 2 do 
				Units = getObj("CDHelicopter0"..i)
				if Units then
					Units:StackOpen()
					Units:SetDestination(friendliesPos)
					Units:SetDestination(CVector(2106, 285, 7706))
					Units:SetDestination(CVector(3612, 285, 2377))
					Units:StackClose()
				end
			end

			println("CD helicopters are on the way")
			LOG("CD helicopters are on the way")

			AddFadingMsgId("fm_aircraft_enroute_foe")

			PlayMusic("bs_force_combat")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="CITFormationManager" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_TARGET_REACHED" ObjName="CITDestroyer01_vehicle_0" />
		<event eventid="GE_TARGET_REACHED" ObjName="CITDestroyer01_vehicle_1" />
		<event eventid="GE_TARGET_REACHED" ObjName="CITOldCruiser01_vehicle_0" />
		<script>
			local Friendlies = StringToTable(GetVar("Friendlies").AsString)
			local TargetFriendlies = {Friendlies[1],Friendlies[2],Friendlies[3]}
			local Unit

			for i=1, 3 do
				Unit = getObj(TargetFriendlies[i])
				if Unit then
					Unit:SetCruisingSpeed(10)
				end
			end

			-- ================ --
			-- Waypoint Manager --
			-- ================ --
			local vehicles = TargetFriendlies
			local currentVehicleName -- "CDDestroyer01"
			local currentVehicle -- = getObj("CDDestroyer01_vehicle_0")
			local currentVehicleWaypointInfo -- = StringToTable(GetVar("CDD01aWaypointStatus").AsString)
			local speedThreshold = 3 -- the speed at which the vehicle is deemed suspiciously still
			local checksThreshold = 3 -- amount of checks for the vehicle to be deemed suspiciciously still
			local checksAmount = 0
			local currentWaypoint = 0
			local vehicleTargetsReached = 0 -- the amount of vehicles that reached the targets, if it equals to the amount of entries in the 'vehicles' table - the trigger deactivates
			local triggerObjName = trigger:GetCallObjName()
			for i=1, getn(vehicles) do
				currentVehicleName = vehicles[i]
				currentVehicle = getObj(currentVehicleName)
				if triggerObjName==currentVehicleName then
					println("trigger object is "..currentVehicleName)
					LOG("trigger object is "..currentVehicleName)
					currentVehicleWaypointInfo = StringToTable(GetVar(currentVehicleName.."_WaypointStatus").AsString)
					currentWaypoint = currentVehicleWaypointInfo[1] + 2
					LOG("currentwaypoint is "..currentWaypoint)
--					currentWaypoint = currentVehicleWaypointInfo[1] + 1
					if currentVehicleWaypointInfo[2] >= currentWaypoint then
						LOG("there are waypoints for "..currentVehicleName)
						currentVehicle:SetExternalPathByName(currentVehicleName.."_Waypoint"..currentWaypoint) -- the vehicle is set on the path for the next waypoint
						currentVehicle:SetCanBeDistractedFromMoving(true) -- set this to false or remove the line if this trigger is used for racing, lol
--						currentVehicleWaypointInfo[1] = currentWaypoint - 1
--						SetVar(currentVehicleName.."WaypointStatus", TableToString(currentVehicleWaypointInfo))
						println(currentVehicleName.." is set for a new waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
						LOG(currentVehicleName.." is set for a new waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
					else
						LOG("maximum waypoints for "..currentVehicleName.." reached")
						println("maximum waypoints for "..currentVehicleName.." reached")
					end

					currentWaypoint = currentWaypoint - 1
					currentVehicleWaypointInfo[1] = currentWaypoint
					currentVehicleWaypointInfo[3] = checksAmount
					SetVar(currentVehicleName.."_WaypointStatus", TableToString(currentVehicleWaypointInfo))
					println(currentVehicleName.." waypoint info updated")

					break
				elseif triggerObjName=="ThePendulum" then
					println("trigger object is the pendulum")
					LOG("trigger object is the pendulum")
					-- it's pendulum that triggered the activation
					-- check if the ships are moving
					-- if they haven't moved for 3 cycles = set them on the current waypoint
					for j=1, getn(vehicles) do
						currentVehicleName = vehicles[j]
						currentVehicle = getObj(currentVehicleName)
						if CheckUnits(currentVehicleName) then
							println(currentVehicleName.." exists")
							currentVehicleWaypointInfo = StringToTable(GetVar(currentVehicleName.."_WaypointStatus").AsString)
							currentWaypoint = currentVehicleWaypointInfo[1] + 1
							if speedThreshold > GetSpeed(currentVehicle) then
								println(currentVehicleName.." speed is too low")
								checksAmount = currentVehicleWaypointInfo[3] + 1 -- the speed of the vehicle is too low, the check has passed one more time
								println("checks amount is "..checksAmount)
								if checksAmount >= checksThreshold then
									println("there have been 3 checks for "..currentVehicleName)
--									currentWaypoint = currentVehicleWaypointInfo[1] + 1
									if currentVehicleWaypointInfo[2] >= currentWaypoint then
										currentVehicle:SetExternalPathByName(currentVehicleName.."_Waypoint"..currentWaypoint) -- the vehicle is set on the path for the current waypoint
										currentVehicle:SetCanBeDistractedFromMoving(true) -- set this to false or remove the line if this trigger is used for racing, lol
										println(currentVehicleName.." set for the current waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
										LOG(currentVehicleName.." set for the current waypoint - "..currentVehicleName.."_Waypoint"..currentWaypoint)
									else
										vehicleTargetsReached = vehicleTargetsReached + 1
										LOG("maximum waypoints for "..currentVehicleName.." reached")
										println("maximum waypoints for "..currentVehicleName.." reached")
									end
								end
							else
								println(currentVehicleName.." speed is fine")
								LOG(currentVehicleName.." speed is fine")
								checksAmount = 0 -- the speed of the vehicle is okay, the checks are dropped
							end

							currentWaypoint = currentWaypoint - 1
							currentVehicleWaypointInfo[1] = currentWaypoint
							currentVehicleWaypointInfo[3] = checksAmount
							SetVar(currentVehicleName.."_WaypointStatus", TableToString(currentVehicleWaypointInfo))
							LOG(currentVehicleName.." waypoint info updated - "..TableToString(currentVehicleWaypointInfo))
							println(currentVehicleName.." waypoint info updated - "..TableToString(currentVehicleWaypointInfo))
--							if currentVehicleWaypointInfo[1] > currentVehicleWaypointInfo[2] then
--								vehicleTargetsReached = vehicleTargetsReached + 1
--							end
						else
							vehicleTargetsReached = vehicleTargetsReached + 1
							LOG(currentVehicleName.." is dead")
							println(currentVehicleName.." is dead")
						end
					end

					break
				end
			end

			LOG("vehicleTargetReached is "..vehicleTargetsReached)
			if vehicleTargetsReached>=getn(vehicles) then
				println("all vehicles reached their targets")
				LOG("ALL CIT REACHED THE TARGET")
				trigger:Deactivate()
			end

		</script>
	</trigger>

	<trigger Name="CITCriticalLosses" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<event eventid="GE_OBJECT_DIE" ObjName="CITOldCruiser01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CITDestroyer01_vehicle_0" />
		<event eventid="GE_OBJECT_DIE" ObjName="CITDestroyer01_vehicle_1" />
		<script>
			local Friendlies = StringToTable(GetVar("Friendlies").AsString)
			local FriendliesHealth = StringToTable(GetVar("FriendliesEndHealth").AsString)
			local PlayerHealth = StringToTable(GetVar("PlayerEndHealth").AsString)
			local TotalHealth = FriendliesHealth[1] + FriendliesHealth[2] + FriendliesHealth[3] + PlayerHealth

			UpdateUnitsStats()

			if CheckUnits(Friendlies, "dead", 2) or 1200 >= TotalHealth then			
				AddFadingMsgId("fm_critical_loss_ally")

				TDeactivate("CITFormationManager")
				TActivate("CITRetreat")

				trigger:Deactivate()
			end
			
		</script>
	</trigger>

	<trigger Name="CITOrder" active="0">
		<event eventid="GE_UNDER_ATTACK" ObjName="CDDestroyer01_vehicle_0" />
		<event eventid="GE_UNDER_ATTACK" ObjName="CDDestroyer01_vehicle_1" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CDDestroyer01_vehicle_0" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CDDestroyer01_vehicle_1" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CDHeavyCruiser01_vehicle_0" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CDBattleship01_vehicle_0" />
		<event eventid="GE_NOTICE_ENEMY" ObjName="CDBattleship01_vehicle_1" />
		<script>
			TakeQuest("CIT_PH02_DestroyDestroyers")

			AddImportantFadingMsgByStrIdFormatted("fm_cit_ph02_destroyers")

			PlayMusic("bs_force_combat")

			trigger:Deactivate()
		</script>
	</trigger>

	<trigger Name="CITRetreat" active="0">
		<event eventid="GE_TARGET_REACHED" ObjName="ThePendulum" />
		<script>
			local Unit
			local Friendlies = StringToTable(GetVar("Friendlies").AsString)

			TDeactivate("CITFormationManager")

			Unit = getObj("CITDestroyer01")
			if Unit then
				Unit:SetProperty ("TeamTacticPrototype", "CowardTeamTactic")
				Unit:_AdjustBehaviour ()
			end
			Unit = getObj("CITOldCruiser01")
			if Unit then
				Unit:SetProperty ("TeamTacticPrototype", "CowardTeamTactic")
				Unit:_AdjustBehaviour ()
			end

			for i=1,3 do
				Unit = getObj(Friendlies[i])
				if Unit then
					Unit:SetExternalPathByName("CITRetreatDirection_"..i)
					Unit:SetCruisingSpeed(40)
					if i~=1 then
						Unit:SetCanBeDistractedFromMoving(false)
					else
						Unit:SetCanBeDistractedFromMoving(true)
					end
				end
			end

			AddImportantFadingMsgByStrIdFormatted("fm_retreat_attempt_ally")

			trigger:Deactivate()
		</script>
	</trigger>
</triggers>